<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd

           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">



	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<context:component-scan base-package="com.xware.barter.controller" />
	
<mvc:annotation-driven />   
	<!-- paul new config -->
	<context:property-placeholder location="classpath*:hibernate.properties" />

	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
		<!--
	<mvc:resources mapping="/resources/**" location="/resources/" />
-->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="jspViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName" value="${db.driver}"></property>
		<property name="url" value="${db.url}"></property>
		<property name="username" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>
	</bean>

	<bean
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean "
		id="sessionFactory">
		<property name="dataSource" ref="dataSource"></property>
		 <property name="packagesToScan" value="com.xware.barter.domain" />
    <!--
		<property name="annotatedClasses">
			<list>
			     
				<value>com.dineshonjava.model.Employee</value>
				
			</list>
			
		</property>
		-->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>
			</props>
		</property>
	</bean>

	<bean class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean class="com.xware.barter.action.ItemServiceImpl" id="itemService">

	</bean>
	 
	<bean class="com.xware.barter.action.UserServiceImpl" id="userService">

	</bean>
	
	<bean class="com.xware.barter.action.ContactServiceImpl" id="contactService">

	</bean>
			<bean class="com.xware.barter.action.UploadService" id="uploadService">

	</bean>


</beans>